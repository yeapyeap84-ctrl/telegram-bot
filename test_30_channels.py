#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ 30 –∫–∞–Ω–∞–ª–æ–≤
"""

import asyncio
from render_bot import TelegramPublisher
from config import BOT_TOKEN, CHANNELS

async def test_30_channels():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ 30 –∫–∞–Ω–∞–ª–æ–≤"""
    print("=" * 60)
    print("–¢–ï–°–¢ –û–¢–ü–†–ê–í–ö–ò –í 30 –ö–ê–ù–ê–õ–û–í")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
    publisher = TelegramPublisher(BOT_TOKEN)
    
    # –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    test_message = "üß™ –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å 30 –∫–∞–Ω–∞–ª–∞–º–∏!"
    
    print(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ {len(CHANNELS)} –∫–∞–Ω–∞–ª–æ–≤...")
    print(f"–ö–∞–Ω–∞–ª—ã: {CHANNELS[:5]}... (–ø–æ–∫–∞–∑–∞–Ω—ã –ø–µ—Ä–≤—ã–µ 5)")
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
        results = await publisher.publish_to_all_channels(test_message)
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        successful = sum(1 for success in results.values() if success)
        failed = len(results) - successful
        
        print(f"\n–†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ê:")
        print(f"–í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤: {len(results)}")
        print(f"–£—Å–ø–µ—à–Ω–æ: {successful}")
        print(f"–û—à–∏–±–æ–∫: {failed}")
        
        if successful > 0:
            print(f"\n‚úÖ –¢–ï–°–¢ –ü–†–û–®–ï–õ! –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {successful} –∫–∞–Ω–∞–ª–æ–≤")
        else:
            print(f"\n‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–®–ï–õ! –í—Å–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å –æ—à–∏–±–∫–æ–π")
            
        return successful > 0
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = await test_30_channels()
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –ë–û–¢ –†–ê–ë–û–¢–ê–ï–¢ –° 30 –ö–ê–ù–ê–õ–ê–ú–ò!")
        print("–¢–µ–ø–µ—Ä—å –æ–Ω –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ 30 –∫–∞–Ω–∞–ª–æ–≤")
    else:
        print("‚ùå –ü–†–û–ë–õ–ï–ú–ê! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞")
    print("=" * 60)

if __name__ == "__main__":
    asyncio.run(main())
