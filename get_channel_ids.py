#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID –∫–∞–Ω–∞–ª–æ–≤
–ü–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ ID –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
"""

import asyncio
import logging
from telegram import Bot
from config import BOT_TOKEN

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def get_channel_info(bot_token: str, channel_username: str):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–Ω–∞–ª–µ –ø–æ @username"""
    bot = Bot(token=bot_token)
    
    try:
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
        chat = await bot.get_chat(f"@{channel_username}")
        
        print(f"üì¢ –ö–∞–Ω–∞–ª: @{channel_username}")
        print(f"üÜî ID: {chat.id}")
        print(f"üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {chat.title}")
        print(f"üë• –¢–∏–ø: {chat.type}")
        print("-" * 50)
        
        return chat.id
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è @{channel_username}: {e}")
        return None

async def get_my_chats(bot_token: str):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —á–∞—Ç–æ–≤, –≥–¥–µ –µ—Å—Ç—å –±–æ—Ç"""
    bot = Bot(token=bot_token)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        bot_info = await bot.get_me()
        print(f"ü§ñ –ë–æ—Ç: @{bot_info.username}")
        print("=" * 60)
        
        # –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, Telegram API –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä—è–º–æ–π —Å–ø–æ—Å–æ–±
        # –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —á–∞—Ç–æ–≤ –±–æ—Ç–∞, –ø–æ—ç—Ç–æ–º—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        print("üìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ü–û–õ–£–ß–ï–ù–ò–Æ ID –ö–ê–ù–ê–õ–û–í:")
        print("=" * 60)
        print("1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        print("2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª")
        print("3. –ü–µ—Ä–µ—à–ª–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É @userinfobot")
        print("4. –ë–æ—Ç –ø–æ–∫–∞–∂–µ—Ç ID –∫–∞–Ω–∞–ª–∞ (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å -100)")
        print("5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ ID –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ config.py")
        print()
        print("üîó –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±:")
        print("1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª")
        print("2. –ü–µ—Ä–µ—à–ª–∏—Ç–µ –µ–≥–æ –±–æ—Ç—É @RawDataBot")
        print("3. –ù–∞–π–¥–∏—Ç–µ 'chat_id' –≤ –æ—Ç–≤–µ—Ç–µ")
        print()
        print("üí° ID –∫–∞–Ω–∞–ª–∞ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫: -1001234567890")
        print("   (–≤—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å -100 –¥–ª—è –∫–∞–Ω–∞–ª–æ–≤)")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def test_channel_access(bot_token: str, channel_id: int):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É –ø–æ ID"""
    bot = Bot(token=bot_token)
    
    try:
        chat = await bot.get_chat(channel_id)
        print(f"‚úÖ –î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É {channel_id}: OK")
        print(f"üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {chat.title}")
        print(f"üë• –¢–∏–ø: {chat.type}")
        return True
    except Exception as e:
        print(f"‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É {channel_id}: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ü–û–õ–£–ß–ï–ù–ò–ï ID –ö–ê–ù–ê–õ–û–í –î–õ–Ø TELEGRAM –ë–û–¢–ê")
    print("=" * 60)
    
    if BOT_TOKEN == 'YOUR_BOT_TOKEN_HERE':
        print("‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å BOT_TOKEN –≤ config.py")
        return
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É
        bot = Bot(token=BOT_TOKEN)
        bot_info = await bot.get_me()
        print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{bot_info.username}")
        print()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        await get_my_chats(BOT_TOKEN)
        
        print("\n" + "=" * 60)
        print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–ê–ù–ê–õ–û–í")
        print("=" * 60)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–Ω–∞–ª—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        from config import CHANNELS
        
        if CHANNELS and CHANNELS[0] != -1001234567890:  # –ï—Å–ª–∏ –∫–∞–Ω–∞–ª—ã —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
            print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–Ω–∞–ª—ã –∏–∑ config.py:")
            for i, channel_id in enumerate(CHANNELS, 1):
                if isinstance(channel_id, int):
                    print(f"\nüì¢ –ö–∞–Ω–∞–ª {i}: {channel_id}")
                    await test_channel_access(BOT_TOKEN, channel_id)
                else:
                    print(f"\nüì¢ –ö–∞–Ω–∞–ª {i}: {channel_id} (–Ω–µ ID)")
        else:
            print("‚ö†Ô∏è –ö–∞–Ω–∞–ª—ã –≤ config.py –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
            print("üí° –ó–∞–º–µ–Ω–∏—Ç–µ –ø—Ä–∏–º–µ—Ä—ã ID –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ ID –≤–∞—à–∏—Ö –∫–∞–Ω–∞–ª–æ–≤")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())
