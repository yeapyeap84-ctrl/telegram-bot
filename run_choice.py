#!/usr/bin/env python3
"""
–í—ã–±–æ—Ä –º–µ–∂–¥—É –ª–æ–∫–∞–ª—å–Ω–æ–π –∏ —Ö–æ—Å—Ç–∏–Ω–≥-–≤–µ—Ä—Å–∏–µ–π –±–æ—Ç–∞
"""

import asyncio
import sys
import os
from pathlib import Path

def check_requirements():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π"""
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
    required_files = ['config.py', 'telegram_bot.py', 'bot_hosting.py']
    missing_files = []
    
    for file in required_files:
        if not Path(file).exists():
            missing_files.append(file)
    
    if missing_files:
        print(f"–û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {', '.join(missing_files)}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    try:
        import telegram
        import schedule
        import pytz
        print("–û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except ImportError as e:
        print(f"–û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Flask –¥–ª—è —Ö–æ—Å—Ç–∏–Ω–≥–∞
    try:
        import flask
        print("Flask –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Ö–æ—Å—Ç–∏–Ω–≥–∞")
    except ImportError:
        print("–í–ù–ò–ú–ê–ù–ò–ï: Flask –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –•–æ—Å—Ç–∏–Ω–≥-–≤–µ—Ä—Å–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        return False
    
    return True

async def main():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    print("=" * 60)
    print("TELEGRAM BOT - –í–´–ë–û–† –í–ï–†–°–ò–ò")
    print("=" * 60)
    
    if not check_requirements():
        print("\n–û–®–ò–ë–ö–ê: –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è")
        return
    
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä—Å–∏—é –±–æ—Ç–∞:")
    print("1. üñ•Ô∏è  –õ–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è (—Ç–æ–ª—å–∫–æ –Ω–∞ –≤–∞—à–µ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ)")
    print("2. ‚òÅÔ∏è  –•–æ—Å—Ç–∏–Ω–≥-–≤–µ—Ä—Å–∏—è (—Å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º)")
    print("3. üöÄ –î–µ–ø–ª–æ–π –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥")
    print("4. üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("5. ‚ùå –í—ã—Ö–æ–¥")
    
    while True:
        try:
            choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-5): ").strip()
            
            if choice == '1':
                print("\n–ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏...")
                print("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
                from telegram_bot import main as run_local
                await run_local()
                break
                
            elif choice == '2':
                print("\n–ó–∞–ø—É—Å–∫ —Ö–æ—Å—Ç–∏–Ω–≥-–≤–µ—Ä—Å–∏–∏...")
                print("–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:5000")
                print("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
                from bot_hosting import main as run_hosting
                await run_hosting()
                break
                
            elif choice == '3':
                print("\n–ó–∞–ø—É—Å–∫ –¥–µ–ø–ª–æ—è...")
                from deploy import main as deploy_main
                deploy_main()
                break
                
            elif choice == '4':
                print("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç:")
                print("1. –¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏")
                print("2. –¢–µ—Å—Ç —Ö–æ—Å—Ç–∏–Ω–≥-–≤–µ—Ä—Å–∏–∏")
                print("3. –¢–µ—Å—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")
                
                test_choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3): ").strip()
                
                if test_choice == '1':
                    from test_simple import main as test_local
                    await test_local()
                elif test_choice == '2':
                    from test_hosting import main as test_hosting
                    await test_hosting()
                elif test_choice == '3':
                    from test_schedule import main as test_schedule
                    await test_schedule()
                else:
                    print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
                break
                
            elif choice == '5':
                print("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
                
            else:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í–≤–µ–¥–∏—Ç–µ 1-5")
                
        except KeyboardInterrupt:
            print("\n–í—ã—Ö–æ–¥...")
            break
        except Exception as e:
            print(f"–û–®–ò–ë–ö–ê: {e}")
            break

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    except Exception as e:
        print(f"–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        sys.exit(1)
